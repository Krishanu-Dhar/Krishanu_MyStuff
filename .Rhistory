geom_vline(xintercept = boundaries$brdu_end,   linetype = "dashed", color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)", color = "boundaries") +
annotate("text", x = boundaries$edu_start,  y = 0.5, label = round(boundaries$edu_start), color = "purple", angle = 45, vjust = -0.5) +
annotate("text", x = boundaries$brdu_start, y = 0.5, label = round(boundaries$brdu_start), color = "darkgreen",  angle = 45, vjust = -0.5) +
annotate("text", x = boundaries$brdu_end,   y = 0.5, label = round(boundaries$brdu_end), color = "darkred",    angle = 45, vjust = -0.5) +
theme_cowplot()
detect_signal_boundaries <- function(summary_df) {
roll_medians <- zoo::rollmedian(summary_df$median_diff, k = 151, align = "left", na.pad = TRUE)
edu_start_idx <- which(roll_medians <= -0.01 & summary_df$x > -20000)
edu_start     <- if (length(edu_start_idx) > 0) summary_df$x[min(edu_start_idx)] else NA
brdu_start <- NA
if (!is.na(edu_start)) {
idx_range     <- which(summary_df$x >= 0)
above_zero    <- idx_range[roll_medians[idx_range] > 0]
if (length(above_zero) > 0) brdu_start <- summary_df$x[above_zero[1]]
}
brdu_end <- NA
if (!is.na(brdu_start)) {
brdu_max_idx <- which.max(summary_df$x)
later_range  <- which(summary_df$x > brdu_max_idx)
below_thresh <- later_range[roll_medians[later_range] <= 0.3]
if (length(below_thresh) > 0) brdu_end <- summary_df$x[below_thresh[1]]
}
summary_df$edu_start   <- edu_start
summary_df$brdu_start  <- brdu_start
summary_df$brdu_end    <- brdu_end
return(summary_df)
}
summary_df <- make_aggregate_plot_df(data_dir, sample_name)
boundaries <- summary_df[1, c("edu_start", "brdu_start", "brdu_end")]
summary_df |>
ggplot(aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(xintercept = boundaries$edu_start,  linetype = "dashed", color = "purple", show.legend = TRUE) +
geom_vline(xintercept = boundaries$brdu_start, linetype = "dashed", color = "darkgreen") +
geom_vline(xintercept = boundaries$brdu_end,   linetype = "dashed", color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)", color = "boundaries") +
annotate("text", x = boundaries$edu_start,  y = 0.5, label = round(boundaries$edu_start), color = "purple", angle = 45, vjust = -0.5) +
annotate("text", x = boundaries$brdu_start, y = 0.5, label = round(boundaries$brdu_start), color = "darkgreen",  angle = 45, vjust = -0.5) +
annotate("text", x = boundaries$brdu_end,   y = 0.5, label = round(boundaries$brdu_end), color = "darkred",    angle = 45, vjust = -0.5) +
theme_cowplot()
detect_signal_boundaries <- function(summary_df) {
roll_medians <- zoo::rollmedian(summary_df$median_diff, k = 151, align = "left", na.pad = TRUE)
edu_start_idx <- which(roll_medians <= -0.01 & summary_df$x > -20000)
edu_start     <- if (length(edu_start_idx) > 0) summary_df$x[min(edu_start_idx)] else NA
brdu_start <- NA
if (!is.na(edu_start)) {
idx_range     <- which(summary_df$x > 0)
above_zero    <- idx_range[roll_medians[idx_range] > 0]
if (length(above_zero) > 0) brdu_start <- summary_df$x[above_zero[1]]
}
brdu_end <- NA
if (!is.na(brdu_start)) {
brdu_max_idx <- which.max(summary_df$x)
later_range  <- which(summary_df$x > brdu_max_idx)
below_thresh <- later_range[roll_medians[later_range] <= 0.3]
if (length(below_thresh) > 0) brdu_end <- summary_df$x[below_thresh[1]]
}
summary_df$edu_start   <- edu_start
summary_df$brdu_start  <- brdu_start
summary_df$brdu_end    <- brdu_end
return(summary_df)
}
summary_df <- make_aggregate_plot_df(data_dir, sample_name)
boundaries <- summary_df[1, c("edu_start", "brdu_start", "brdu_end")]
summary_df |>
ggplot(aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(xintercept = boundaries$edu_start,  linetype = "dashed", color = "purple", show.legend = TRUE) +
geom_vline(xintercept = boundaries$brdu_start, linetype = "dashed", color = "darkgreen") +
geom_vline(xintercept = boundaries$brdu_end,   linetype = "dashed", color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)", color = "boundaries") +
annotate("text", x = boundaries$edu_start,  y = 0.5, label = round(boundaries$edu_start), color = "purple", angle = 45, vjust = -0.5) +
annotate("text", x = boundaries$brdu_start, y = 0.5, label = round(boundaries$brdu_start), color = "darkgreen",  angle = 45, vjust = -0.5) +
annotate("text", x = boundaries$brdu_end,   y = 0.5, label = round(boundaries$brdu_end), color = "darkred",    angle = 45, vjust = -0.5) +
theme_cowplot()
# Setting the directory where our input data is
data_dir <- here("projects", "data/bedgraphs/Auxin")
sample_name <- "Auxin"
summary_df <- make_aggregate_plot_df(data_dir, sample_name)
boundaries <- summary_df[1, c("edu_start", "brdu_start", "brdu_end")]
summary_df |>
ggplot(aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(xintercept = boundaries$edu_start,  linetype = "dashed", color = "purple", show.legend = TRUE) +
geom_vline(xintercept = boundaries$brdu_start, linetype = "dashed", color = "darkgreen") +
geom_vline(xintercept = boundaries$brdu_end,   linetype = "dashed", color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)", color = "boundaries") +
annotate("text", x = boundaries$edu_start,  y = 0.5, label = round(boundaries$edu_start), color = "purple", angle = 45, vjust = -0.5) +
annotate("text", x = boundaries$brdu_start, y = 0.5, label = round(boundaries$brdu_start), color = "darkgreen",  angle = 45, vjust = -0.5) +
annotate("text", x = boundaries$brdu_end,   y = 0.5, label = round(boundaries$brdu_end), color = "darkred",    angle = 45, vjust = -0.5) +
theme_cowplot()
?which.max
x <- c(1:4, 0:5, 11)
which.min(x)
which.max(x)
x <- c(1,2,3,4,7,0,9)
which.max(x)
data_dir <- here("projects", "data/bedgraphs")
# List your sample names
sample_names <- c("Auxin", "NT")
# Load and annotate each sample's data
summary_all <- map_dfr(sample_names, function(sample_name) {
df <- make_aggregate_plot_df(file.path(data_dir, sample_name), sample_name)
df$sample_name <- sample_name
# Also add the boundaries as columns (repeated per row)
boundaries <- df[1, c("edu_start", "brdu_start", "brdu_end")]
df$edu_start <- boundaries$edu_start
df$brdu_start <- boundaries$brdu_start
df$brdu_end <- boundaries$brdu_end
return(df)
})
# Plot with facet wrap
ggplot(summary_all, aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_wrap(~ sample_name) +
theme_cowplot()
?facet_wrap
View(summary_all)
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_wrap(~ sample_name) +
theme_cowplot()
View(summary_all)
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
# List your sample names
sample_names <- c("NT", "Auxin")
# Load and annotate each sample's data
summary_all <- map_dfr(sample_names, function(sample_name) {
df <- make_aggregate_plot_df(file.path(data_dir, sample_name), sample_name)
df$sample_name <- sample_name
# Also add the boundaries as columns (repeated per row)
boundaries <- df[1, c("edu_start", "brdu_start", "brdu_end")]
df$edu_start <- boundaries$edu_start
df$brdu_start <- boundaries$brdu_start
df$brdu_end <- boundaries$brdu_end
return(df)
})
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
?factor
# Load and annotate each sample's data
summary_all <- map_dfr(sample_names, function(sample_name) {
df <- make_aggregate_plot_df(file.path(data_dir, sample_name), sample_name)
df$sample_name <- factor(sample_name, levels = sample_names)
# Also add the boundaries as columns (repeated per row)
boundaries <- df[1, c("edu_start", "brdu_start", "brdu_end")]
df$edu_start <- boundaries$edu_start
df$brdu_start <- boundaries$brdu_start
df$brdu_end <- boundaries$brdu_end
return(df)
})
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
View(summary_df)
View(summary_all)
read_bedgraph_tracks <- function(directory) {
filenames <- list.files(path = directory, pattern = ".bedgraph")
dataframes <- lapply(file.path(directory, filenames), read.table)
names(dataframes) <- filenames
basenames <- gsub(".*__", "", filenames)
brdu_edu_df_list <- lapply(basenames, function(base) {
brdu <- dataframes[[paste0("BrdU__", base)]]
edu  <- dataframes[[paste0("EdU__",  base)]]
df <- data.frame(
brdu[, 1:3],
BrdU = brdu[, 4],
EdU  = edu[, 4],
diff = brdu[, 4] - edu[, 4],
id = base
)
colnames(df) <- c("chromosome", "start", "end", "BrdU", "EdU", "diff")
return(df)
})
return(brdu_edu_df_list)
}
data_dir <- here("projects", "data/bedgraphs")
# List your sample names
sample_names <- c("NT", "Auxin")
# Load and annotate each sample's data
summary_all <- map_dfr(sample_names, function(sample_name) {
df <- make_aggregate_plot_df(file.path(data_dir, sample_name), sample_name)
df$sample_name <- factor(sample_name, levels = sample_names)
# Also add the boundaries as columns (repeated per row)
boundaries <- df[1, c("edu_start", "brdu_start", "brdu_end")]
df$edu_start <- boundaries$edu_start
df$brdu_start <- boundaries$brdu_start
df$brdu_end <- boundaries$brdu_end
return(df)
})
rlang::last_trace()
read_bedgraph_tracks <- function(directory) {
filenames <- list.files(path = directory, pattern = ".bedgraph")
dataframes <- lapply(file.path(directory, filenames), read.table)
names(dataframes) <- filenames
basenames <- gsub(".*__", "", filenames)
brdu_edu_df_list <- lapply(basenames, function(base) {
brdu <- dataframes[[paste0("BrdU__", base)]]
edu  <- dataframes[[paste0("EdU__",  base)]]
df <- data.frame(
brdu[, 1:3],
BrdU = brdu[, 4],
EdU  = edu[, 4],
diff = brdu[, 4] - edu[, 4],
id = base
)
colnames(df) <- c("chromosome", "start", "end", "BrdU", "EdU", "diff", "read_ID")
return(df)
})
return(brdu_edu_df_list)
}
data_dir <- here("projects", "data/bedgraphs")
# List your sample names
sample_names <- c("NT", "Auxin")
# Load and annotate each sample's data
summary_all <- map_dfr(sample_names, function(sample_name) {
df <- make_aggregate_plot_df(file.path(data_dir, sample_name), sample_name)
df$sample_name <- factor(sample_name, levels = sample_names)
# Also add the boundaries as columns (repeated per row)
boundaries <- df[1, c("edu_start", "brdu_start", "brdu_end")]
df$edu_start <- boundaries$edu_start
df$brdu_start <- boundaries$brdu_start
df$brdu_end <- boundaries$brdu_end
return(df)
})
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
View(summary_df)
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_line(color = "blue") +
#geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_line(color = "blue") +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
detect_signal_boundaries <- function(summary_df) {
roll_medians <- zoo::rollmedian(summary_df$median_diff, k = 151, align = "left", na.pad = TRUE)
edu_start_idx <- which(roll_medians <= -0.1 & summary_df$x > -20000)
edu_start     <- if (length(edu_start_idx) > 0) summary_df$x[min(edu_start_idx)] else NA
brdu_start <- NA
if (!is.na(edu_start)) {
idx_range     <- which(summary_df$x > 0)
above_zero    <- idx_range[roll_medians[idx_range] > 0]
if (length(above_zero) > 0) brdu_start <- summary_df$x[above_zero[1]]
}
brdu_end <- NA
if (!is.na(brdu_start)) {
brdu_max_idx <- which.max(summary_df$x)
later_range  <- which(summary_df$x > brdu_max_idx)
below_thresh <- later_range[roll_medians[later_range] <= 0.3]
if (length(below_thresh) > 0) brdu_end <- summary_df$x[below_thresh[1]]
}
summary_df$edu_start   <- edu_start
summary_df$brdu_start  <- brdu_start
summary_df$brdu_end    <- brdu_end
return(summary_df)
}
data_dir <- here("projects", "data/bedgraphs")
# List your sample names
sample_names <- c("NT", "Auxin")
# Load and annotate each sample's data
summary_all <- map_dfr(sample_names, function(sample_name) {
df <- make_aggregate_plot_df(file.path(data_dir, sample_name), sample_name)
df$sample_name <- factor(sample_name, levels = sample_names)
# Also add the boundaries as columns (repeated per row)
boundaries <- df[1, c("edu_start", "brdu_start", "brdu_end")]
df$edu_start <- boundaries$edu_start
df$brdu_start <- boundaries$brdu_start
df$brdu_end <- boundaries$brdu_end
return(df)
})
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_line(color = "blue") +
geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_line(color = "grey") +
#geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = 0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_line(color = "blue") +
#geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = -0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
detect_signal_boundaries <- function(summary_df) {
roll_medians <- zoo::rollmedian(summary_df$median_diff, k = 151, align = "left", na.pad = TRUE)
edu_start_idx <- which(roll_medians <= -0.1 & summary_df$x > -20000)
edu_start     <- if (length(edu_start_idx) > 0) summary_df$x[min(edu_start_idx)] else NA
brdu_start <- NA
if (!is.na(edu_start)) {
idx_range     <- which(summary_df$x > 0)
above_zero    <- idx_range[roll_medians[idx_range] > 0]
if (length(above_zero) > 0) brdu_start <- summary_df$x[above_zero[1]]
}
brdu_end <- NA
if (!is.na(brdu_start)) {
brdu_max_idx <- which.max(summary_df$x)
later_range  <- which(summary_df$x > brdu_max_idx)
below_thresh <- later_range[roll_medians[later_range] <= 0.4]
if (length(below_thresh) > 0) brdu_end <- summary_df$x[below_thresh[1]]
}
summary_df$edu_start   <- edu_start
summary_df$brdu_start  <- brdu_start
summary_df$brdu_end    <- brdu_end
return(summary_df)
}
data_dir <- here("projects", "data/bedgraphs")
# List your sample names
sample_names <- c("NT", "Auxin")
# Load and annotate each sample's data
summary_all <- map_dfr(sample_names, function(sample_name) {
df <- make_aggregate_plot_df(file.path(data_dir, sample_name), sample_name)
df$sample_name <- factor(sample_name, levels = sample_names)
# Also add the boundaries as columns (repeated per row)
boundaries <- df[1, c("edu_start", "brdu_start", "brdu_end")]
df$edu_start <- boundaries$edu_start
df$brdu_start <- boundaries$brdu_start
df$brdu_end <- boundaries$brdu_end
return(df)
})
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_line(color = "blue") +
#geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = -0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
detect_signal_boundaries <- function(summary_df) {
roll_medians <- zoo::rollmedian(summary_df$median_diff, k = 151, align = "left", na.pad = TRUE)
edu_start_idx <- which(roll_medians <= -0.1 & summary_df$x > -20000)
edu_start     <- if (length(edu_start_idx) > 0) summary_df$x[min(edu_start_idx)] else NA
brdu_start <- NA
if (!is.na(edu_start)) {
idx_range     <- which(summary_df$x > 0)
above_zero    <- idx_range[roll_medians[idx_range] > 0]
if (length(above_zero) > 0) brdu_start <- summary_df$x[above_zero[1]]
}
brdu_end <- NA
if (!is.na(brdu_start)) {
brdu_max_idx <- which.max(summary_df$x)
later_range  <- which(summary_df$x > brdu_max_idx)
below_thresh <- later_range[roll_medians[later_range] <= 0.5]
if (length(below_thresh) > 0) brdu_end <- summary_df$x[below_thresh[1]]
}
summary_df$edu_start   <- edu_start
summary_df$brdu_start  <- brdu_start
summary_df$brdu_end    <- brdu_end
return(summary_df)
}
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_line(color = "blue") +
#geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = -0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
data_dir <- here("projects", "data/bedgraphs")
# List your sample names
sample_names <- c("NT", "Auxin")
# Load and annotate each sample's data
summary_all <- map_dfr(sample_names, function(sample_name) {
df <- make_aggregate_plot_df(file.path(data_dir, sample_name), sample_name)
df$sample_name <- factor(sample_name, levels = sample_names)
# Also add the boundaries as columns (repeated per row)
boundaries <- df[1, c("edu_start", "brdu_start", "brdu_end")]
df$edu_start <- boundaries$edu_start
df$brdu_start <- boundaries$brdu_start
df$brdu_end <- boundaries$brdu_end
return(df)
})
# Plot with facet wrap
summary_all |>
ggplot(aes(x = x, y = median_diff)) +
geom_line(color = "blue") +
#geom_smooth(method = "loess", span = 0.2, se = TRUE, color = "lightblue") +
geom_vline(aes(xintercept = edu_start), linetype = "dashed", color = "purple") +
geom_vline(aes(xintercept = brdu_start), linetype = "dashed", color = "darkgreen") +
geom_vline(aes(xintercept = brdu_end), linetype = "dashed", color = "darkred") +
geom_text(aes(x = edu_start, y = 0.5, label = round(edu_start)), angle = 45, vjust = -0.5, color = "purple") +
geom_text(aes(x = brdu_start, y = 0.5, label = round(brdu_start)), angle = 45, vjust = -0.5, color = "darkgreen") +
geom_text(aes(x = brdu_end, y = -0.5, label = round(brdu_end)), angle = 45, vjust = -0.5, color = "darkred") +
labs(title = "Aggregate BrdU - EdU signal", x = "Relative Position (bp)", y = "Median Δ signal (BrdU-EdU)") +
facet_grid(sample_name ~.) +
theme_cowplot()
View(summary_df)
gc()
gc()
